{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\art-website\\\\art-website\\\\art-web\\\\src\\\\Symbols.js\";\nimport React, { Component } from \"react\";\nimport Draggable from 'react-draggable';\nimport './symbols.css';\nimport './style.css';\nimport './Desktop.js';\nimport './desktop.css';\nimport folder from './folder.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Symbols extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  /*\n  const [state, setState] = useState({\n      isDragging: false,\n      dX: position.x,\n      dY: position.y\n    });\n  \n    const onMouseMove = useCallback(\n      e => {\n        if (state.isDragging) {\n          setState(prevState => ({\n            ...prevState,\n            dX: prevState.dX + e.movementX,\n            dY: prevState.dY + e.movementY\n          }));\n        }\n      },\n      [state.isDragging]\n    );\n  \n    const onMouseDown = useCallback(() => {\n      setState(prevState => ({\n        ...prevState,\n        isDragging: true\n      }));\n    }, []);\n  \n    const onMouseUp = useCallback(() => {\n      if (state.isDragging) {\n        setState(prevState => ({\n          ...prevState,\n          isDragging: false\n        }));\n      }\n    }, [state.isDragging]);\n  \n    useEffect(() => {\n      window.addEventListener(\"mousemove\", onMouseMove);\n      window.addEventListener(\"mouseup\", onMouseUp);\n  \n      return () => {\n        window.removeEventListener(\"mousemove\", onMouseMove);\n        window.removeEventListener(\"mouseup\", onMouseUp);\n      };\n    }, [onMouseMove, onMouseUp]);\n  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"each-icon\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"icons-pic\",\n          src: folder,\n          alt: \"imp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"icon-name\",\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Symbols;","map":{"version":3,"sources":["C:/Users/Ali/Desktop/art-website/art-website/art-web/src/Symbols.js"],"names":["React","Component","Draggable","folder","Symbols","constructor","state","render","props","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,eAAP;AACA,OAAO,aAAP;AACA,OAAO,cAAP;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAY,EAAZ;AAGD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIEC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,gCACA;AAAK,UAAA,EAAE,EAAC,WAAR;AAAoB,UAAA,GAAG,EAAEJ,MAAzB;AAAiC,UAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE;AAAG,UAAA,EAAE,EAAC,WAAN;AAAA,oBAAmB,KAAKK,KAAL,CAAWC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAlE6B;;AAsEhC,eAAeL,OAAf","sourcesContent":["import React, { Component } from \"react\"\nimport Draggable from 'react-draggable';\nimport './symbols.css'\nimport './style.css'\nimport './Desktop.js'\nimport './desktop.css'\nimport folder from './folder.jpg'\n\nclass Symbols extends Component {\n  constructor() {\n    super()\n    this.state ={\n    \n    }\n  }\n\n/*\nconst [state, setState] = useState({\n    isDragging: false,\n    dX: position.x,\n    dY: position.y\n  });\n\n  const onMouseMove = useCallback(\n    e => {\n      if (state.isDragging) {\n        setState(prevState => ({\n          ...prevState,\n          dX: prevState.dX + e.movementX,\n          dY: prevState.dY + e.movementY\n        }));\n      }\n    },\n    [state.isDragging]\n  );\n\n  const onMouseDown = useCallback(() => {\n    setState(prevState => ({\n      ...prevState,\n      isDragging: true\n    }));\n  }, []);\n\n  const onMouseUp = useCallback(() => {\n    if (state.isDragging) {\n      setState(prevState => ({\n        ...prevState,\n        isDragging: false\n      }));\n    }\n  }, [state.isDragging]);\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", onMouseMove);\n    window.addEventListener(\"mouseup\", onMouseUp);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", onMouseMove);\n      window.removeEventListener(\"mouseup\", onMouseUp);\n    };\n  }, [onMouseMove, onMouseUp]);\n*/\n\n\n\n  render() {\n    return (\n      <Draggable >\n          <div id=\"each-icon\">\n          <img id=\"icons-pic\" src={folder} alt=\"imp\"></img>\n            <p id=\"icon-name\">{this.props.title}</p>\n          </div>\n      </Draggable>\n    )\n  }\n}\n\n\nexport default Symbols;\n"]},"metadata":{},"sourceType":"module"}